"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
const SensorType_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/SensorType"));
const Dispositivo_1 = __importDefault(require("./Dispositivo"));
class Sensor extends Orm_1.BaseModel {
}
Sensor.table = 'sensors';
__decorate([
    (0, Orm_1.column)({ isPrimary: true }),
    __metadata("design:type", Number)
], Sensor.prototype, "id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], Sensor.prototype, "sensor_type_id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], Sensor.prototype, "dispositivo_id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], Sensor.prototype, "activo", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], Sensor.prototype, "value", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true }),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], Sensor.prototype, "created_at", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], Sensor.prototype, "updated_at", void 0);
__decorate([
    (0, Orm_1.belongsTo)(() => SensorType_1.default, {
        localKey: 'id',
        foreignKey: 'sensor_type_id',
    }),
    __metadata("design:type", typeof (_c = typeof Orm_1.BelongsTo !== "undefined" && Orm_1.BelongsTo) === "function" ? _c : Object)
], Sensor.prototype, "sensorType", void 0);
__decorate([
    (0, Orm_1.belongsTo)(() => Dispositivo_1.default, {
        localKey: 'id',
        foreignKey: 'dispositivo_id',
    }),
    __metadata("design:type", typeof (_d = typeof Orm_1.BelongsTo !== "undefined" && Orm_1.BelongsTo) === "function" ? _d : Object)
], Sensor.prototype, "dispositivo", void 0);
exports.default = Sensor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc29yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU2Vuc29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlDQUFnQztBQUNoQyxnRUFBK0U7QUFDL0UsNkZBQThDO0FBQzlDLGdFQUF1QztBQTZCdkMsTUFBcUIsTUFBTyxTQUFRLGVBQVM7O0FBQzdCLFlBQUssR0FBRSxTQUFTLENBQUE7QUFHOUI7SUFEQyxJQUFBLFlBQU0sRUFBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7a0NBQ1g7QUFHakI7SUFEQyxJQUFBLFlBQU0sR0FBRTs7OENBQ29CO0FBSTdCO0lBREMsSUFBQSxZQUFNLEdBQUU7OzhDQUNvQjtBQUc3QjtJQURDLElBQUEsWUFBTSxHQUFFOztzQ0FDWTtBQUdyQjtJQURDLElBQUEsWUFBTSxHQUFFOztxQ0FDVztBQUdwQjtJQURDLFlBQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUM7a0RBQ25CLGdCQUFRLG9CQUFSLGdCQUFROzBDQUFBO0FBRzNCO0lBREMsWUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUNyQyxnQkFBUSxvQkFBUixnQkFBUTswQ0FBQTtBQU8zQjtJQUpDLElBQUEsZUFBUyxFQUFDLEdBQUcsRUFBRSxDQUFDLG9CQUFVLEVBQUM7UUFDMUIsUUFBUSxFQUFFLElBQUk7UUFDZCxVQUFVLEVBQUUsZ0JBQWdCO0tBQzdCLENBQUM7a0RBQ2lCLGVBQVMsb0JBQVQsZUFBUzswQ0FBbUI7QUFNL0M7SUFKQyxJQUFBLGVBQVMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxxQkFBVyxFQUFFO1FBQzVCLFFBQVEsRUFBRSxJQUFJO1FBQ2QsVUFBVSxFQUFFLGdCQUFnQjtLQUM3QixDQUFDO2tEQUNrQixlQUFTLG9CQUFULGVBQVM7MkNBQW9CO0FBcENuRCx5QkFxQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRlVGltZSB9IGZyb20gJ2x1eG9uJ1xyXG5pbXBvcnQgeyBCYXNlTW9kZWwsIGNvbHVtbiwgYmVsb25nc1RvLCBCZWxvbmdzVG8gfSBmcm9tICdAaW9jOkFkb25pcy9MdWNpZC9Pcm0nXHJcbmltcG9ydCBTZW5zb3JUeXBlIGZyb20gJ0FwcC9Nb2RlbHMvU2Vuc29yVHlwZSdcclxuaW1wb3J0IERpc3Bvc2l0aXZvIGZyb20gJy4vRGlzcG9zaXRpdm8nXHJcbi8qKlxyXG4gKiBAc3dhZ2dlclxyXG4gKiBjb21wb25lbnRzOlxyXG4gKiAgc2NoZW1hczpcclxuICogICAgU2Vuc29yOlxyXG4gKiAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgIHByb3BlcnRpZXM6XHJcbiAqICAgICAgICBpZDpcclxuICogICAgICAgICAgdHlwZTogaW50ZWdlclxyXG4gKiAgICAgICAgICBleGFtcGxlOiAxMFxyXG4gKiAgICAgICAgc2Vuc29yX3R5cGVfaWQ6XHJcbiAqICAgICAgICAgIHR5cGU6IGludGVnZXJcclxuICogICAgICAgICAgZXhhbXBsZTogIDEwXHJcbiAqICAgICAgICBkaXNwb3NpdGl2b19pZDpcclxuICogICAgICAgICAgdHlwZTogaW50ZWdlclxyXG4gKiAgICAgICAgICBleGFtcGxlOiAgMVxyXG4gKiAgICAgICAgYWN0aXZvOlxyXG4gKiAgICAgICAgICB0eXBlOiBpbnRlZ2VyXHJcbiAqICAgICAgICAgIGV4YW1wbGU6ICAxIFxyXG4gKiAgICAgICAgdmFsdWU6IFxyXG4gKiAgICAgICAgICB0eXBlOiBcclxuICogICAgICByZXF1aXJlZDpcclxuICogICAgICAgIC0gaWRcclxuICogICAgICAgIC0gc2Vuc29yX3R5cGVfaWRcclxuICogICAgICAgIC0gZGlzcG9zaXRpdm9faWRcclxuICogICAgICAgIC0gYWN0aXZvXHJcbiAqICAgICAgICAtIHZhbHVlXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZW5zb3IgZXh0ZW5kcyBCYXNlTW9kZWwge1xyXG4gIHB1YmxpYyBzdGF0aWMgdGFibGUgPSdzZW5zb3JzJ1xyXG5cclxuICBAY29sdW1uKHsgaXNQcmltYXJ5OiB0cnVlIH0pXHJcbiAgcHVibGljIGlkOiBudW1iZXJcclxuXHJcbiAgQGNvbHVtbigpXHJcbiAgcHVibGljIHNlbnNvcl90eXBlX2lkOiBudW1iZXJcclxuXHJcbiAgXHJcbiAgQGNvbHVtbigpXHJcbiAgcHVibGljIGRpc3Bvc2l0aXZvX2lkOiBudW1iZXJcclxuXHJcbiAgQGNvbHVtbigpXHJcbiAgcHVibGljIGFjdGl2bzogbnVtYmVyXHJcblxyXG4gIEBjb2x1bW4oKVxyXG4gIHB1YmxpYyB2YWx1ZTogbnVtYmVyXHJcblxyXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlIH0pXHJcbiAgcHVibGljIGNyZWF0ZWRfYXQ6IERhdGVUaW1lXHJcblxyXG4gIEBjb2x1bW4uZGF0ZVRpbWUoeyBhdXRvQ3JlYXRlOiB0cnVlLCBhdXRvVXBkYXRlOiB0cnVlIH0pXHJcbiAgcHVibGljIHVwZGF0ZWRfYXQ6IERhdGVUaW1lXHJcblxyXG4gIC8vIFJlbGFjacOzbiBjb24gZWwgbW9kZWxvIFNlbnNvclR5cGUgKHBlcnRlbmVjZSBhIHVuIHRpcG8gZGUgc2Vuc29yKVxyXG4gIEBiZWxvbmdzVG8oKCkgPT4gU2Vuc29yVHlwZSx7XHJcbiAgICBsb2NhbEtleTogJ2lkJywgIFxyXG4gICAgZm9yZWlnbktleTogJ3NlbnNvcl90eXBlX2lkJyxcclxuICB9KVxyXG4gIHB1YmxpYyBzZW5zb3JUeXBlOiBCZWxvbmdzVG88dHlwZW9mIFNlbnNvclR5cGU+XHJcblxyXG4gIEBiZWxvbmdzVG8oKCkgPT4gRGlzcG9zaXRpdm8sIHtcclxuICAgIGxvY2FsS2V5OiAnaWQnLCAgXHJcbiAgICBmb3JlaWduS2V5OiAnZGlzcG9zaXRpdm9faWQnLFxyXG4gIH0pXHJcbiAgcHVibGljIGRpc3Bvc2l0aXZvOiBCZWxvbmdzVG88dHlwZW9mIERpc3Bvc2l0aXZvPlxyXG59XHJcbiJdfQ==